//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TimrSyncTest.TimrSyncWebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TimrSyncSoap11", Namespace="http://timr.com/timrsync")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RunningRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RecordQuery))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Record))]
    public partial class TimrSyncService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWorkTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRunningDriveLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignLeaderToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupFromTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRunningWorkTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDriveLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignGroupToTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGroupExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDriveLogsStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockProjectTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskByUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserByUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriveLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetProjectTimesStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTaskExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkItemByUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWorkTimesStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskByUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWorkItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCarFromUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignTaskToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRunningProjectTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupLeadersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkItemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProjectTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTaskFromUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLeaderFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignCarToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InviteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockProjectTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCarByUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TimrSyncService() {
            this.Url = "https://timrsync.timr.com:443/timr/timrsync";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteCarCompletedEventHandler DeleteCarCompleted;
        
        /// <remarks/>
        public event UpdateCarCompletedEventHandler UpdateCarCompleted;
        
        /// <remarks/>
        public event GetTasksCompletedEventHandler GetTasksCompleted;
        
        /// <remarks/>
        public event SaveWorkTimeCompletedEventHandler SaveWorkTimeCompleted;
        
        /// <remarks/>
        public event AddCarCompletedEventHandler AddCarCompleted;
        
        /// <remarks/>
        public event GetRunningDriveLogsCompletedEventHandler GetRunningDriveLogsCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event GetWorkTimesCompletedEventHandler GetWorkTimesCompleted;
        
        /// <remarks/>
        public event AssignLeaderToGroupCompletedEventHandler AssignLeaderToGroupCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event RemoveGroupFromTaskCompletedEventHandler RemoveGroupFromTaskCompleted;
        
        /// <remarks/>
        public event GetRunningWorkTimesCompletedEventHandler GetRunningWorkTimesCompleted;
        
        /// <remarks/>
        public event DeleteWorkItemCompletedEventHandler DeleteWorkItemCompleted;
        
        /// <remarks/>
        public event UpdateCarIdCompletedEventHandler UpdateCarIdCompleted;
        
        /// <remarks/>
        public event AddTaskCompletedEventHandler AddTaskCompleted;
        
        /// <remarks/>
        public event SaveDriveLogCompletedEventHandler SaveDriveLogCompleted;
        
        /// <remarks/>
        public event UpdateGroupIdCompletedEventHandler UpdateGroupIdCompleted;
        
        /// <remarks/>
        public event GetWorkItemsCompletedEventHandler GetWorkItemsCompleted;
        
        /// <remarks/>
        public event GetGroupUsersCompletedEventHandler GetGroupUsersCompleted;
        
        /// <remarks/>
        public event AssignGroupToTaskCompletedEventHandler AssignGroupToTaskCompleted;
        
        /// <remarks/>
        public event SetGroupExternalIdCompletedEventHandler SetGroupExternalIdCompleted;
        
        /// <remarks/>
        public event SetDriveLogsStatusCompletedEventHandler SetDriveLogsStatusCompleted;
        
        /// <remarks/>
        public event UnlockProjectTimesCompletedEventHandler UnlockProjectTimesCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetProjectTimesCompletedEventHandler GetProjectTimesCompleted;
        
        /// <remarks/>
        public event DeleteTaskByUUIDCompletedEventHandler DeleteTaskByUUIDCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event UpdateGroupCompletedEventHandler UpdateGroupCompleted;
        
        /// <remarks/>
        public event DeleteUserByUUIDCompletedEventHandler DeleteUserByUUIDCompleted;
        
        /// <remarks/>
        public event GetDriveLogsCompletedEventHandler GetDriveLogsCompleted;
        
        /// <remarks/>
        public event GetCarsCompletedEventHandler GetCarsCompleted;
        
        /// <remarks/>
        public event SetProjectTimesStatusCompletedEventHandler SetProjectTimesStatusCompleted;
        
        /// <remarks/>
        public event GetGroupsCompletedEventHandler GetGroupsCompleted;
        
        /// <remarks/>
        public event SetTaskExternalIdCompletedEventHandler SetTaskExternalIdCompleted;
        
        /// <remarks/>
        public event DeleteWorkItemByUUIDCompletedEventHandler DeleteWorkItemByUUIDCompleted;
        
        /// <remarks/>
        public event SetWorkTimesStatusCompletedEventHandler SetWorkTimesStatusCompleted;
        
        /// <remarks/>
        public event GetTaskByUUIDCompletedEventHandler GetTaskByUUIDCompleted;
        
        /// <remarks/>
        public event AssignUserToGroupCompletedEventHandler AssignUserToGroupCompleted;
        
        /// <remarks/>
        public event AddWorkItemCompletedEventHandler AddWorkItemCompleted;
        
        /// <remarks/>
        public event RemoveCarFromUserCompletedEventHandler RemoveCarFromUserCompleted;
        
        /// <remarks/>
        public event AssignTaskToUserCompletedEventHandler AssignTaskToUserCompleted;
        
        /// <remarks/>
        public event GetRunningProjectTimesCompletedEventHandler GetRunningProjectTimesCompleted;
        
        /// <remarks/>
        public event GetGroupLeadersCompletedEventHandler GetGroupLeadersCompleted;
        
        /// <remarks/>
        public event UpdateWorkItemIdCompletedEventHandler UpdateWorkItemIdCompleted;
        
        /// <remarks/>
        public event UpdateUserIdCompletedEventHandler UpdateUserIdCompleted;
        
        /// <remarks/>
        public event SaveProjectTimeCompletedEventHandler SaveProjectTimeCompleted;
        
        /// <remarks/>
        public event UpdateTaskCompletedEventHandler UpdateTaskCompleted;
        
        /// <remarks/>
        public event DeleteTaskCompletedEventHandler DeleteTaskCompleted;
        
        /// <remarks/>
        public event RemoveTaskFromUserCompletedEventHandler RemoveTaskFromUserCompleted;
        
        /// <remarks/>
        public event RemoveLeaderFromGroupCompletedEventHandler RemoveLeaderFromGroupCompleted;
        
        /// <remarks/>
        public event UpdateTaskIdCompletedEventHandler UpdateTaskIdCompleted;
        
        /// <remarks/>
        public event UpdateWorkItemCompletedEventHandler UpdateWorkItemCompleted;
        
        /// <remarks/>
        public event AssignCarToUserCompletedEventHandler AssignCarToUserCompleted;
        
        /// <remarks/>
        public event DeleteGroupCompletedEventHandler DeleteGroupCompleted;
        
        /// <remarks/>
        public event InviteUserCompletedEventHandler InviteUserCompleted;
        
        /// <remarks/>
        public event LockProjectTimesCompletedEventHandler LockProjectTimesCompleted;
        
        /// <remarks/>
        public event DeleteCarByUUIDCompletedEventHandler DeleteCarByUUIDCompleted;
        
        /// <remarks/>
        public event GetGroupCompletedEventHandler GetGroupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteCarResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteCar([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteCarRequest) {
            object[] results = this.Invoke("DeleteCar", new object[] {
                        DeleteCarRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCarAsync(string DeleteCarRequest) {
            this.DeleteCarAsync(DeleteCarRequest, null);
        }
        
        /// <remarks/>
        public void DeleteCarAsync(string DeleteCarRequest, object userState) {
            if ((this.DeleteCarOperationCompleted == null)) {
                this.DeleteCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCarOperationCompleted);
            }
            this.InvokeAsync("DeleteCar", new object[] {
                        DeleteCarRequest}, this.DeleteCarOperationCompleted, userState);
        }
        
        private void OnDeleteCarOperationCompleted(object arg) {
            if ((this.DeleteCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCarCompleted(this, new DeleteCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateCarResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateCar([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] Car UpdateCarRequest) {
            object[] results = this.Invoke("UpdateCar", new object[] {
                        UpdateCarRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarAsync(Car UpdateCarRequest) {
            this.UpdateCarAsync(UpdateCarRequest, null);
        }
        
        /// <remarks/>
        public void UpdateCarAsync(Car UpdateCarRequest, object userState) {
            if ((this.UpdateCarOperationCompleted == null)) {
                this.UpdateCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarOperationCompleted);
            }
            this.InvokeAsync("UpdateCar", new object[] {
                        UpdateCarRequest}, this.UpdateCarOperationCompleted, userState);
        }
        
        private void OnUpdateCarOperationCompleted(object arg) {
            if ((this.UpdateCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarCompleted(this, new UpdateCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetTasksResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("tasks", IsNullable=false)]
        public Task[] GetTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] GetTasksRequest GetTasksRequest) {
            object[] results = this.Invoke("GetTasks", new object[] {
                        GetTasksRequest});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTasksAsync(GetTasksRequest GetTasksRequest) {
            this.GetTasksAsync(GetTasksRequest, null);
        }
        
        /// <remarks/>
        public void GetTasksAsync(GetTasksRequest GetTasksRequest, object userState) {
            if ((this.GetTasksOperationCompleted == null)) {
                this.GetTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTasksOperationCompleted);
            }
            this.InvokeAsync("GetTasks", new object[] {
                        GetTasksRequest}, this.GetTasksOperationCompleted, userState);
        }
        
        private void OnGetTasksOperationCompleted(object arg) {
            if ((this.GetTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTasksCompleted(this, new GetTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SaveWorkTimeResponse", Namespace="http://timr.com/timrsync")]
        public long SaveWorkTime([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] WorkTime SaveWorkTimeRequest) {
            object[] results = this.Invoke("SaveWorkTime", new object[] {
                        SaveWorkTimeRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWorkTimeAsync(WorkTime SaveWorkTimeRequest) {
            this.SaveWorkTimeAsync(SaveWorkTimeRequest, null);
        }
        
        /// <remarks/>
        public void SaveWorkTimeAsync(WorkTime SaveWorkTimeRequest, object userState) {
            if ((this.SaveWorkTimeOperationCompleted == null)) {
                this.SaveWorkTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWorkTimeOperationCompleted);
            }
            this.InvokeAsync("SaveWorkTime", new object[] {
                        SaveWorkTimeRequest}, this.SaveWorkTimeOperationCompleted, userState);
        }
        
        private void OnSaveWorkTimeOperationCompleted(object arg) {
            if ((this.SaveWorkTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWorkTimeCompleted(this, new SaveWorkTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddCarResponse", Namespace="http://timr.com/timrsync")]
        public long AddCar([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] Car AddCarRequest) {
            object[] results = this.Invoke("AddCar", new object[] {
                        AddCarRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddCarAsync(Car AddCarRequest) {
            this.AddCarAsync(AddCarRequest, null);
        }
        
        /// <remarks/>
        public void AddCarAsync(Car AddCarRequest, object userState) {
            if ((this.AddCarOperationCompleted == null)) {
                this.AddCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCarOperationCompleted);
            }
            this.InvokeAsync("AddCar", new object[] {
                        AddCarRequest}, this.AddCarOperationCompleted, userState);
        }
        
        private void OnAddCarOperationCompleted(object arg) {
            if ((this.AddCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCarCompleted(this, new AddCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetRunningDriveLogsResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("runningDriveLogs", IsNullable=false)]
        public RunningDriveLog[] GetRunningDriveLogs([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] object GetRunningDriveLogsRequest) {
            object[] results = this.Invoke("GetRunningDriveLogs", new object[] {
                        GetRunningDriveLogsRequest});
            return ((RunningDriveLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRunningDriveLogsAsync(object GetRunningDriveLogsRequest) {
            this.GetRunningDriveLogsAsync(GetRunningDriveLogsRequest, null);
        }
        
        /// <remarks/>
        public void GetRunningDriveLogsAsync(object GetRunningDriveLogsRequest, object userState) {
            if ((this.GetRunningDriveLogsOperationCompleted == null)) {
                this.GetRunningDriveLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRunningDriveLogsOperationCompleted);
            }
            this.InvokeAsync("GetRunningDriveLogs", new object[] {
                        GetRunningDriveLogsRequest}, this.GetRunningDriveLogsOperationCompleted, userState);
        }
        
        private void OnGetRunningDriveLogsOperationCompleted(object arg) {
            if ((this.GetRunningDriveLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRunningDriveLogsCompleted(this, new GetRunningDriveLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RemoveUserFromGroupResponse", Namespace="http://timr.com/timrsync")]
        public bool RemoveUserFromGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] RemoveUserFromGroupRequest RemoveUserFromGroupRequest) {
            object[] results = this.Invoke("RemoveUserFromGroup", new object[] {
                        RemoveUserFromGroupRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(RemoveUserFromGroupRequest RemoveUserFromGroupRequest) {
            this.RemoveUserFromGroupAsync(RemoveUserFromGroupRequest, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(RemoveUserFromGroupRequest RemoveUserFromGroupRequest, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        RemoveUserFromGroupRequest}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new RemoveUserFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteUserResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteUserRequest) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        DeleteUserRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string DeleteUserRequest) {
            this.DeleteUserAsync(DeleteUserRequest, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string DeleteUserRequest, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        DeleteUserRequest}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetWorkTimesResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("workTimes", IsNullable=false)]
        public WorkTime[] GetWorkTimes([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] WorkTimeQuery GetWorkTimesRequest) {
            object[] results = this.Invoke("GetWorkTimes", new object[] {
                        GetWorkTimesRequest});
            return ((WorkTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkTimesAsync(WorkTimeQuery GetWorkTimesRequest) {
            this.GetWorkTimesAsync(GetWorkTimesRequest, null);
        }
        
        /// <remarks/>
        public void GetWorkTimesAsync(WorkTimeQuery GetWorkTimesRequest, object userState) {
            if ((this.GetWorkTimesOperationCompleted == null)) {
                this.GetWorkTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkTimesOperationCompleted);
            }
            this.InvokeAsync("GetWorkTimes", new object[] {
                        GetWorkTimesRequest}, this.GetWorkTimesOperationCompleted, userState);
        }
        
        private void OnGetWorkTimesOperationCompleted(object arg) {
            if ((this.GetWorkTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkTimesCompleted(this, new GetWorkTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AssignLeaderToGroupResponse", Namespace="http://timr.com/timrsync")]
        public bool AssignLeaderToGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] AssignLeaderToGroupRequest AssignLeaderToGroupRequest) {
            object[] results = this.Invoke("AssignLeaderToGroup", new object[] {
                        AssignLeaderToGroupRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignLeaderToGroupAsync(AssignLeaderToGroupRequest AssignLeaderToGroupRequest) {
            this.AssignLeaderToGroupAsync(AssignLeaderToGroupRequest, null);
        }
        
        /// <remarks/>
        public void AssignLeaderToGroupAsync(AssignLeaderToGroupRequest AssignLeaderToGroupRequest, object userState) {
            if ((this.AssignLeaderToGroupOperationCompleted == null)) {
                this.AssignLeaderToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignLeaderToGroupOperationCompleted);
            }
            this.InvokeAsync("AssignLeaderToGroup", new object[] {
                        AssignLeaderToGroupRequest}, this.AssignLeaderToGroupOperationCompleted, userState);
        }
        
        private void OnAssignLeaderToGroupOperationCompleted(object arg) {
            if ((this.AssignLeaderToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignLeaderToGroupCompleted(this, new AssignLeaderToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddUserResponse", Namespace="http://timr.com/timrsync")]
        public long AddUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] User AddUserRequest) {
            object[] results = this.Invoke("AddUser", new object[] {
                        AddUserRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(User AddUserRequest) {
            this.AddUserAsync(AddUserRequest, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(User AddUserRequest, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        AddUserRequest}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RemoveGroupFromTaskResponse", Namespace="http://timr.com/timrsync")]
        public bool RemoveGroupFromTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] RemoveGroupFromTaskRequest RemoveGroupFromTaskRequest) {
            object[] results = this.Invoke("RemoveGroupFromTask", new object[] {
                        RemoveGroupFromTaskRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveGroupFromTaskAsync(RemoveGroupFromTaskRequest RemoveGroupFromTaskRequest) {
            this.RemoveGroupFromTaskAsync(RemoveGroupFromTaskRequest, null);
        }
        
        /// <remarks/>
        public void RemoveGroupFromTaskAsync(RemoveGroupFromTaskRequest RemoveGroupFromTaskRequest, object userState) {
            if ((this.RemoveGroupFromTaskOperationCompleted == null)) {
                this.RemoveGroupFromTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupFromTaskOperationCompleted);
            }
            this.InvokeAsync("RemoveGroupFromTask", new object[] {
                        RemoveGroupFromTaskRequest}, this.RemoveGroupFromTaskOperationCompleted, userState);
        }
        
        private void OnRemoveGroupFromTaskOperationCompleted(object arg) {
            if ((this.RemoveGroupFromTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupFromTaskCompleted(this, new RemoveGroupFromTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetRunningWorkTimesResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("runningWorkTimes", IsNullable=false)]
        public RunningWorkTime[] GetRunningWorkTimes([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] object GetRunningWorkTimesRequest) {
            object[] results = this.Invoke("GetRunningWorkTimes", new object[] {
                        GetRunningWorkTimesRequest});
            return ((RunningWorkTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRunningWorkTimesAsync(object GetRunningWorkTimesRequest) {
            this.GetRunningWorkTimesAsync(GetRunningWorkTimesRequest, null);
        }
        
        /// <remarks/>
        public void GetRunningWorkTimesAsync(object GetRunningWorkTimesRequest, object userState) {
            if ((this.GetRunningWorkTimesOperationCompleted == null)) {
                this.GetRunningWorkTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRunningWorkTimesOperationCompleted);
            }
            this.InvokeAsync("GetRunningWorkTimes", new object[] {
                        GetRunningWorkTimesRequest}, this.GetRunningWorkTimesOperationCompleted, userState);
        }
        
        private void OnGetRunningWorkTimesOperationCompleted(object arg) {
            if ((this.GetRunningWorkTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRunningWorkTimesCompleted(this, new GetRunningWorkTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteWorkItemResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteWorkItem([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteWorkItemRequest) {
            object[] results = this.Invoke("DeleteWorkItem", new object[] {
                        DeleteWorkItemRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkItemAsync(string DeleteWorkItemRequest) {
            this.DeleteWorkItemAsync(DeleteWorkItemRequest, null);
        }
        
        /// <remarks/>
        public void DeleteWorkItemAsync(string DeleteWorkItemRequest, object userState) {
            if ((this.DeleteWorkItemOperationCompleted == null)) {
                this.DeleteWorkItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkItemOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkItem", new object[] {
                        DeleteWorkItemRequest}, this.DeleteWorkItemOperationCompleted, userState);
        }
        
        private void OnDeleteWorkItemOperationCompleted(object arg) {
            if ((this.DeleteWorkItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkItemCompleted(this, new DeleteWorkItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateCarIdResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateCarId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] UpdateCarIdRequest UpdateCarIdRequest) {
            object[] results = this.Invoke("UpdateCarId", new object[] {
                        UpdateCarIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarIdAsync(UpdateCarIdRequest UpdateCarIdRequest) {
            this.UpdateCarIdAsync(UpdateCarIdRequest, null);
        }
        
        /// <remarks/>
        public void UpdateCarIdAsync(UpdateCarIdRequest UpdateCarIdRequest, object userState) {
            if ((this.UpdateCarIdOperationCompleted == null)) {
                this.UpdateCarIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarIdOperationCompleted);
            }
            this.InvokeAsync("UpdateCarId", new object[] {
                        UpdateCarIdRequest}, this.UpdateCarIdOperationCompleted, userState);
        }
        
        private void OnUpdateCarIdOperationCompleted(object arg) {
            if ((this.UpdateCarIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarIdCompleted(this, new UpdateCarIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddTaskResponse", Namespace="http://timr.com/timrsync")]
        public long AddTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] Task AddTaskRequest) {
            object[] results = this.Invoke("AddTask", new object[] {
                        AddTaskRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddTaskAsync(Task AddTaskRequest) {
            this.AddTaskAsync(AddTaskRequest, null);
        }
        
        /// <remarks/>
        public void AddTaskAsync(Task AddTaskRequest, object userState) {
            if ((this.AddTaskOperationCompleted == null)) {
                this.AddTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaskOperationCompleted);
            }
            this.InvokeAsync("AddTask", new object[] {
                        AddTaskRequest}, this.AddTaskOperationCompleted, userState);
        }
        
        private void OnAddTaskOperationCompleted(object arg) {
            if ((this.AddTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaskCompleted(this, new AddTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SaveDriveLogResponse", Namespace="http://timr.com/timrsync")]
        public long SaveDriveLog([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] DriveLog SaveDriveLogRequest) {
            object[] results = this.Invoke("SaveDriveLog", new object[] {
                        SaveDriveLogRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDriveLogAsync(DriveLog SaveDriveLogRequest) {
            this.SaveDriveLogAsync(SaveDriveLogRequest, null);
        }
        
        /// <remarks/>
        public void SaveDriveLogAsync(DriveLog SaveDriveLogRequest, object userState) {
            if ((this.SaveDriveLogOperationCompleted == null)) {
                this.SaveDriveLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDriveLogOperationCompleted);
            }
            this.InvokeAsync("SaveDriveLog", new object[] {
                        SaveDriveLogRequest}, this.SaveDriveLogOperationCompleted, userState);
        }
        
        private void OnSaveDriveLogOperationCompleted(object arg) {
            if ((this.SaveDriveLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDriveLogCompleted(this, new SaveDriveLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateGroupIdResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateGroupId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] UpdateGroupIdRequest UpdateGroupIdRequest) {
            object[] results = this.Invoke("UpdateGroupId", new object[] {
                        UpdateGroupIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupIdAsync(UpdateGroupIdRequest UpdateGroupIdRequest) {
            this.UpdateGroupIdAsync(UpdateGroupIdRequest, null);
        }
        
        /// <remarks/>
        public void UpdateGroupIdAsync(UpdateGroupIdRequest UpdateGroupIdRequest, object userState) {
            if ((this.UpdateGroupIdOperationCompleted == null)) {
                this.UpdateGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupIdOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupId", new object[] {
                        UpdateGroupIdRequest}, this.UpdateGroupIdOperationCompleted, userState);
        }
        
        private void OnUpdateGroupIdOperationCompleted(object arg) {
            if ((this.UpdateGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupIdCompleted(this, new UpdateGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetWorkItemsResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("workItem", IsNullable=false)]
        public WorkItem[] GetWorkItems([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] object GetWorkItemsRequest) {
            object[] results = this.Invoke("GetWorkItems", new object[] {
                        GetWorkItemsRequest});
            return ((WorkItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkItemsAsync(object GetWorkItemsRequest) {
            this.GetWorkItemsAsync(GetWorkItemsRequest, null);
        }
        
        /// <remarks/>
        public void GetWorkItemsAsync(object GetWorkItemsRequest, object userState) {
            if ((this.GetWorkItemsOperationCompleted == null)) {
                this.GetWorkItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkItemsOperationCompleted);
            }
            this.InvokeAsync("GetWorkItems", new object[] {
                        GetWorkItemsRequest}, this.GetWorkItemsOperationCompleted, userState);
        }
        
        private void OnGetWorkItemsOperationCompleted(object arg) {
            if ((this.GetWorkItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkItemsCompleted(this, new GetWorkItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetGroupUsersResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("users", IsNullable=false)]
        public User[] GetGroupUsers([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string GetGroupUsersRequest) {
            object[] results = this.Invoke("GetGroupUsers", new object[] {
                        GetGroupUsersRequest});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupUsersAsync(string GetGroupUsersRequest) {
            this.GetGroupUsersAsync(GetGroupUsersRequest, null);
        }
        
        /// <remarks/>
        public void GetGroupUsersAsync(string GetGroupUsersRequest, object userState) {
            if ((this.GetGroupUsersOperationCompleted == null)) {
                this.GetGroupUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupUsersOperationCompleted);
            }
            this.InvokeAsync("GetGroupUsers", new object[] {
                        GetGroupUsersRequest}, this.GetGroupUsersOperationCompleted, userState);
        }
        
        private void OnGetGroupUsersOperationCompleted(object arg) {
            if ((this.GetGroupUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupUsersCompleted(this, new GetGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AssignGroupToTaskResponse", Namespace="http://timr.com/timrsync")]
        public bool AssignGroupToTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] AssignGroupToTaskRequest AssignGroupToTaskRequest) {
            object[] results = this.Invoke("AssignGroupToTask", new object[] {
                        AssignGroupToTaskRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignGroupToTaskAsync(AssignGroupToTaskRequest AssignGroupToTaskRequest) {
            this.AssignGroupToTaskAsync(AssignGroupToTaskRequest, null);
        }
        
        /// <remarks/>
        public void AssignGroupToTaskAsync(AssignGroupToTaskRequest AssignGroupToTaskRequest, object userState) {
            if ((this.AssignGroupToTaskOperationCompleted == null)) {
                this.AssignGroupToTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignGroupToTaskOperationCompleted);
            }
            this.InvokeAsync("AssignGroupToTask", new object[] {
                        AssignGroupToTaskRequest}, this.AssignGroupToTaskOperationCompleted, userState);
        }
        
        private void OnAssignGroupToTaskOperationCompleted(object arg) {
            if ((this.AssignGroupToTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignGroupToTaskCompleted(this, new AssignGroupToTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetGroupExternalIdResponse", Namespace="http://timr.com/timrsync")]
        public bool SetGroupExternalId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] SetGroupExternalIdRequest SetGroupExternalIdRequest) {
            object[] results = this.Invoke("SetGroupExternalId", new object[] {
                        SetGroupExternalIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetGroupExternalIdAsync(SetGroupExternalIdRequest SetGroupExternalIdRequest) {
            this.SetGroupExternalIdAsync(SetGroupExternalIdRequest, null);
        }
        
        /// <remarks/>
        public void SetGroupExternalIdAsync(SetGroupExternalIdRequest SetGroupExternalIdRequest, object userState) {
            if ((this.SetGroupExternalIdOperationCompleted == null)) {
                this.SetGroupExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGroupExternalIdOperationCompleted);
            }
            this.InvokeAsync("SetGroupExternalId", new object[] {
                        SetGroupExternalIdRequest}, this.SetGroupExternalIdOperationCompleted, userState);
        }
        
        private void OnSetGroupExternalIdOperationCompleted(object arg) {
            if ((this.SetGroupExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGroupExternalIdCompleted(this, new SetGroupExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetDriveLogsStatusResponse", Namespace="http://timr.com/timrsync")]
        public bool SetDriveLogsStatus([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] DriveLogsStatusRequestType SetDriveLogsStatusRequest) {
            object[] results = this.Invoke("SetDriveLogsStatus", new object[] {
                        SetDriveLogsStatusRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetDriveLogsStatusAsync(DriveLogsStatusRequestType SetDriveLogsStatusRequest) {
            this.SetDriveLogsStatusAsync(SetDriveLogsStatusRequest, null);
        }
        
        /// <remarks/>
        public void SetDriveLogsStatusAsync(DriveLogsStatusRequestType SetDriveLogsStatusRequest, object userState) {
            if ((this.SetDriveLogsStatusOperationCompleted == null)) {
                this.SetDriveLogsStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDriveLogsStatusOperationCompleted);
            }
            this.InvokeAsync("SetDriveLogsStatus", new object[] {
                        SetDriveLogsStatusRequest}, this.SetDriveLogsStatusOperationCompleted, userState);
        }
        
        private void OnSetDriveLogsStatusOperationCompleted(object arg) {
            if ((this.SetDriveLogsStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDriveLogsStatusCompleted(this, new SetDriveLogsStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UnlockProjectTimesResponse", Namespace="http://timr.com/timrsync")]
        public bool UnlockProjectTimes([System.Xml.Serialization.XmlArrayAttribute(Namespace="http://timr.com/timrsync")] [System.Xml.Serialization.XmlArrayItemAttribute("ids", IsNullable=false)] long[] UnlockProjectTimesRequest) {
            object[] results = this.Invoke("UnlockProjectTimes", new object[] {
                        UnlockProjectTimesRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockProjectTimesAsync(long[] UnlockProjectTimesRequest) {
            this.UnlockProjectTimesAsync(UnlockProjectTimesRequest, null);
        }
        
        /// <remarks/>
        public void UnlockProjectTimesAsync(long[] UnlockProjectTimesRequest, object userState) {
            if ((this.UnlockProjectTimesOperationCompleted == null)) {
                this.UnlockProjectTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockProjectTimesOperationCompleted);
            }
            this.InvokeAsync("UnlockProjectTimes", new object[] {
                        UnlockProjectTimesRequest}, this.UnlockProjectTimesOperationCompleted, userState);
        }
        
        private void OnUnlockProjectTimesOperationCompleted(object arg) {
            if ((this.UnlockProjectTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockProjectTimesCompleted(this, new UnlockProjectTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateUserResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] User UpdateUserRequest) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        UpdateUserRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(User UpdateUserRequest) {
            this.UpdateUserAsync(UpdateUserRequest, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(User UpdateUserRequest, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        UpdateUserRequest}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetUsersResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("users", IsNullable=false)]
        public User[] GetUsers([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] object GetUsersRequest) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        GetUsersRequest});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(object GetUsersRequest) {
            this.GetUsersAsync(GetUsersRequest, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object GetUsersRequest, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        GetUsersRequest}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTaskResponse", Namespace="http://timr.com/timrsync")]
        public Task GetTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string GetTaskRequest) {
            object[] results = this.Invoke("GetTask", new object[] {
                        GetTaskRequest});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(string GetTaskRequest) {
            this.GetTaskAsync(GetTaskRequest, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(string GetTaskRequest, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        GetTaskRequest}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetProjectTimesResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("projectTimes", IsNullable=false)]
        public ProjectTime[] GetProjectTimes([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] ProjectTimeQuery GetProjectTimesRequest) {
            object[] results = this.Invoke("GetProjectTimes", new object[] {
                        GetProjectTimesRequest});
            return ((ProjectTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectTimesAsync(ProjectTimeQuery GetProjectTimesRequest) {
            this.GetProjectTimesAsync(GetProjectTimesRequest, null);
        }
        
        /// <remarks/>
        public void GetProjectTimesAsync(ProjectTimeQuery GetProjectTimesRequest, object userState) {
            if ((this.GetProjectTimesOperationCompleted == null)) {
                this.GetProjectTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectTimesOperationCompleted);
            }
            this.InvokeAsync("GetProjectTimes", new object[] {
                        GetProjectTimesRequest}, this.GetProjectTimesOperationCompleted, userState);
        }
        
        private void OnGetProjectTimesOperationCompleted(object arg) {
            if ((this.GetProjectTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectTimesCompleted(this, new GetProjectTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteTaskByUUIDResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteTaskByUUID([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteTaskByUUIDRequest) {
            object[] results = this.Invoke("DeleteTaskByUUID", new object[] {
                        DeleteTaskByUUIDRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskByUUIDAsync(string DeleteTaskByUUIDRequest) {
            this.DeleteTaskByUUIDAsync(DeleteTaskByUUIDRequest, null);
        }
        
        /// <remarks/>
        public void DeleteTaskByUUIDAsync(string DeleteTaskByUUIDRequest, object userState) {
            if ((this.DeleteTaskByUUIDOperationCompleted == null)) {
                this.DeleteTaskByUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskByUUIDOperationCompleted);
            }
            this.InvokeAsync("DeleteTaskByUUID", new object[] {
                        DeleteTaskByUUIDRequest}, this.DeleteTaskByUUIDOperationCompleted, userState);
        }
        
        private void OnDeleteTaskByUUIDOperationCompleted(object arg) {
            if ((this.DeleteTaskByUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskByUUIDCompleted(this, new DeleteTaskByUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddGroupResponse", Namespace="http://timr.com/timrsync")]
        public long AddGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] Group AddGroupRequest) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        AddGroupRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(Group AddGroupRequest) {
            this.AddGroupAsync(AddGroupRequest, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(Group AddGroupRequest, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        AddGroupRequest}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateGroupResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] Group UpdateGroupRequest) {
            object[] results = this.Invoke("UpdateGroup", new object[] {
                        UpdateGroupRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(Group UpdateGroupRequest) {
            this.UpdateGroupAsync(UpdateGroupRequest, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(Group UpdateGroupRequest, object userState) {
            if ((this.UpdateGroupOperationCompleted == null)) {
                this.UpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateGroup", new object[] {
                        UpdateGroupRequest}, this.UpdateGroupOperationCompleted, userState);
        }
        
        private void OnUpdateGroupOperationCompleted(object arg) {
            if ((this.UpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCompleted(this, new UpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteUserByUUIDResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteUserByUUID([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteUserByUUIDRequest) {
            object[] results = this.Invoke("DeleteUserByUUID", new object[] {
                        DeleteUserByUUIDRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserByUUIDAsync(string DeleteUserByUUIDRequest) {
            this.DeleteUserByUUIDAsync(DeleteUserByUUIDRequest, null);
        }
        
        /// <remarks/>
        public void DeleteUserByUUIDAsync(string DeleteUserByUUIDRequest, object userState) {
            if ((this.DeleteUserByUUIDOperationCompleted == null)) {
                this.DeleteUserByUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserByUUIDOperationCompleted);
            }
            this.InvokeAsync("DeleteUserByUUID", new object[] {
                        DeleteUserByUUIDRequest}, this.DeleteUserByUUIDOperationCompleted, userState);
        }
        
        private void OnDeleteUserByUUIDOperationCompleted(object arg) {
            if ((this.DeleteUserByUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserByUUIDCompleted(this, new DeleteUserByUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetDriveLogsResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("driveLogs", IsNullable=false)]
        public DriveLog[] GetDriveLogs([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] DriveLogQuery GetDriveLogsRequest) {
            object[] results = this.Invoke("GetDriveLogs", new object[] {
                        GetDriveLogsRequest});
            return ((DriveLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDriveLogsAsync(DriveLogQuery GetDriveLogsRequest) {
            this.GetDriveLogsAsync(GetDriveLogsRequest, null);
        }
        
        /// <remarks/>
        public void GetDriveLogsAsync(DriveLogQuery GetDriveLogsRequest, object userState) {
            if ((this.GetDriveLogsOperationCompleted == null)) {
                this.GetDriveLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriveLogsOperationCompleted);
            }
            this.InvokeAsync("GetDriveLogs", new object[] {
                        GetDriveLogsRequest}, this.GetDriveLogsOperationCompleted, userState);
        }
        
        private void OnGetDriveLogsOperationCompleted(object arg) {
            if ((this.GetDriveLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriveLogsCompleted(this, new GetDriveLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetCarsResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("cars", IsNullable=false)]
        public Car[] GetCars([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] object GetCarsRequest) {
            object[] results = this.Invoke("GetCars", new object[] {
                        GetCarsRequest});
            return ((Car[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCarsAsync(object GetCarsRequest) {
            this.GetCarsAsync(GetCarsRequest, null);
        }
        
        /// <remarks/>
        public void GetCarsAsync(object GetCarsRequest, object userState) {
            if ((this.GetCarsOperationCompleted == null)) {
                this.GetCarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarsOperationCompleted);
            }
            this.InvokeAsync("GetCars", new object[] {
                        GetCarsRequest}, this.GetCarsOperationCompleted, userState);
        }
        
        private void OnGetCarsOperationCompleted(object arg) {
            if ((this.GetCarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarsCompleted(this, new GetCarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetProjectTimesStatusResponse", Namespace="http://timr.com/timrsync")]
        public bool SetProjectTimesStatus([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] ProjectTimesStatusRequestType SetProjectTimesStatusRequest) {
            object[] results = this.Invoke("SetProjectTimesStatus", new object[] {
                        SetProjectTimesStatusRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetProjectTimesStatusAsync(ProjectTimesStatusRequestType SetProjectTimesStatusRequest) {
            this.SetProjectTimesStatusAsync(SetProjectTimesStatusRequest, null);
        }
        
        /// <remarks/>
        public void SetProjectTimesStatusAsync(ProjectTimesStatusRequestType SetProjectTimesStatusRequest, object userState) {
            if ((this.SetProjectTimesStatusOperationCompleted == null)) {
                this.SetProjectTimesStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetProjectTimesStatusOperationCompleted);
            }
            this.InvokeAsync("SetProjectTimesStatus", new object[] {
                        SetProjectTimesStatusRequest}, this.SetProjectTimesStatusOperationCompleted, userState);
        }
        
        private void OnSetProjectTimesStatusOperationCompleted(object arg) {
            if ((this.SetProjectTimesStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetProjectTimesStatusCompleted(this, new SetProjectTimesStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetGroupsResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("groups", IsNullable=false)]
        public Group[] GetGroups([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] GetGroupsRequest GetGroupsRequest) {
            object[] results = this.Invoke("GetGroups", new object[] {
                        GetGroupsRequest});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsAsync(GetGroupsRequest GetGroupsRequest) {
            this.GetGroupsAsync(GetGroupsRequest, null);
        }
        
        /// <remarks/>
        public void GetGroupsAsync(GetGroupsRequest GetGroupsRequest, object userState) {
            if ((this.GetGroupsOperationCompleted == null)) {
                this.GetGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsOperationCompleted);
            }
            this.InvokeAsync("GetGroups", new object[] {
                        GetGroupsRequest}, this.GetGroupsOperationCompleted, userState);
        }
        
        private void OnGetGroupsOperationCompleted(object arg) {
            if ((this.GetGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsCompleted(this, new GetGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetTaskExternalIdResponse", Namespace="http://timr.com/timrsync")]
        public bool SetTaskExternalId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] SetTaskExternalIdRequest SetTaskExternalIdRequest) {
            object[] results = this.Invoke("SetTaskExternalId", new object[] {
                        SetTaskExternalIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTaskExternalIdAsync(SetTaskExternalIdRequest SetTaskExternalIdRequest) {
            this.SetTaskExternalIdAsync(SetTaskExternalIdRequest, null);
        }
        
        /// <remarks/>
        public void SetTaskExternalIdAsync(SetTaskExternalIdRequest SetTaskExternalIdRequest, object userState) {
            if ((this.SetTaskExternalIdOperationCompleted == null)) {
                this.SetTaskExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTaskExternalIdOperationCompleted);
            }
            this.InvokeAsync("SetTaskExternalId", new object[] {
                        SetTaskExternalIdRequest}, this.SetTaskExternalIdOperationCompleted, userState);
        }
        
        private void OnSetTaskExternalIdOperationCompleted(object arg) {
            if ((this.SetTaskExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTaskExternalIdCompleted(this, new SetTaskExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteWorkItemByUUIDResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteWorkItemByUUID([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteWorkItemByUUIDRequest) {
            object[] results = this.Invoke("DeleteWorkItemByUUID", new object[] {
                        DeleteWorkItemByUUIDRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkItemByUUIDAsync(string DeleteWorkItemByUUIDRequest) {
            this.DeleteWorkItemByUUIDAsync(DeleteWorkItemByUUIDRequest, null);
        }
        
        /// <remarks/>
        public void DeleteWorkItemByUUIDAsync(string DeleteWorkItemByUUIDRequest, object userState) {
            if ((this.DeleteWorkItemByUUIDOperationCompleted == null)) {
                this.DeleteWorkItemByUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkItemByUUIDOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkItemByUUID", new object[] {
                        DeleteWorkItemByUUIDRequest}, this.DeleteWorkItemByUUIDOperationCompleted, userState);
        }
        
        private void OnDeleteWorkItemByUUIDOperationCompleted(object arg) {
            if ((this.DeleteWorkItemByUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkItemByUUIDCompleted(this, new DeleteWorkItemByUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetWorkTimesStatusResponse", Namespace="http://timr.com/timrsync")]
        public bool SetWorkTimesStatus([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] WorkTimesStatusRequestType SetWorkTimesStatusRequest) {
            object[] results = this.Invoke("SetWorkTimesStatus", new object[] {
                        SetWorkTimesStatusRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetWorkTimesStatusAsync(WorkTimesStatusRequestType SetWorkTimesStatusRequest) {
            this.SetWorkTimesStatusAsync(SetWorkTimesStatusRequest, null);
        }
        
        /// <remarks/>
        public void SetWorkTimesStatusAsync(WorkTimesStatusRequestType SetWorkTimesStatusRequest, object userState) {
            if ((this.SetWorkTimesStatusOperationCompleted == null)) {
                this.SetWorkTimesStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWorkTimesStatusOperationCompleted);
            }
            this.InvokeAsync("SetWorkTimesStatus", new object[] {
                        SetWorkTimesStatusRequest}, this.SetWorkTimesStatusOperationCompleted, userState);
        }
        
        private void OnSetWorkTimesStatusOperationCompleted(object arg) {
            if ((this.SetWorkTimesStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWorkTimesStatusCompleted(this, new SetWorkTimesStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTaskByUUIDResponse", Namespace="http://timr.com/timrsync")]
        public Task GetTaskByUUID([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string GetTaskByUUIDRequest) {
            object[] results = this.Invoke("GetTaskByUUID", new object[] {
                        GetTaskByUUIDRequest});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskByUUIDAsync(string GetTaskByUUIDRequest) {
            this.GetTaskByUUIDAsync(GetTaskByUUIDRequest, null);
        }
        
        /// <remarks/>
        public void GetTaskByUUIDAsync(string GetTaskByUUIDRequest, object userState) {
            if ((this.GetTaskByUUIDOperationCompleted == null)) {
                this.GetTaskByUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskByUUIDOperationCompleted);
            }
            this.InvokeAsync("GetTaskByUUID", new object[] {
                        GetTaskByUUIDRequest}, this.GetTaskByUUIDOperationCompleted, userState);
        }
        
        private void OnGetTaskByUUIDOperationCompleted(object arg) {
            if ((this.GetTaskByUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskByUUIDCompleted(this, new GetTaskByUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AssignUserToGroupResponse", Namespace="http://timr.com/timrsync")]
        public bool AssignUserToGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] AssignUserToGroupRequest AssignUserToGroupRequest) {
            object[] results = this.Invoke("AssignUserToGroup", new object[] {
                        AssignUserToGroupRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignUserToGroupAsync(AssignUserToGroupRequest AssignUserToGroupRequest) {
            this.AssignUserToGroupAsync(AssignUserToGroupRequest, null);
        }
        
        /// <remarks/>
        public void AssignUserToGroupAsync(AssignUserToGroupRequest AssignUserToGroupRequest, object userState) {
            if ((this.AssignUserToGroupOperationCompleted == null)) {
                this.AssignUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AssignUserToGroup", new object[] {
                        AssignUserToGroupRequest}, this.AssignUserToGroupOperationCompleted, userState);
        }
        
        private void OnAssignUserToGroupOperationCompleted(object arg) {
            if ((this.AssignUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserToGroupCompleted(this, new AssignUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddWorkItemResponse", Namespace="http://timr.com/timrsync")]
        public long AddWorkItem([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] WorkItem AddWorkItemRequest) {
            object[] results = this.Invoke("AddWorkItem", new object[] {
                        AddWorkItemRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddWorkItemAsync(WorkItem AddWorkItemRequest) {
            this.AddWorkItemAsync(AddWorkItemRequest, null);
        }
        
        /// <remarks/>
        public void AddWorkItemAsync(WorkItem AddWorkItemRequest, object userState) {
            if ((this.AddWorkItemOperationCompleted == null)) {
                this.AddWorkItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWorkItemOperationCompleted);
            }
            this.InvokeAsync("AddWorkItem", new object[] {
                        AddWorkItemRequest}, this.AddWorkItemOperationCompleted, userState);
        }
        
        private void OnAddWorkItemOperationCompleted(object arg) {
            if ((this.AddWorkItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWorkItemCompleted(this, new AddWorkItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RemoveCarFromUserResponse", Namespace="http://timr.com/timrsync")]
        public bool RemoveCarFromUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] RemoveCarFromUserRequest RemoveCarFromUserRequest) {
            object[] results = this.Invoke("RemoveCarFromUser", new object[] {
                        RemoveCarFromUserRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCarFromUserAsync(RemoveCarFromUserRequest RemoveCarFromUserRequest) {
            this.RemoveCarFromUserAsync(RemoveCarFromUserRequest, null);
        }
        
        /// <remarks/>
        public void RemoveCarFromUserAsync(RemoveCarFromUserRequest RemoveCarFromUserRequest, object userState) {
            if ((this.RemoveCarFromUserOperationCompleted == null)) {
                this.RemoveCarFromUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCarFromUserOperationCompleted);
            }
            this.InvokeAsync("RemoveCarFromUser", new object[] {
                        RemoveCarFromUserRequest}, this.RemoveCarFromUserOperationCompleted, userState);
        }
        
        private void OnRemoveCarFromUserOperationCompleted(object arg) {
            if ((this.RemoveCarFromUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCarFromUserCompleted(this, new RemoveCarFromUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AssignTaskToUserResponse", Namespace="http://timr.com/timrsync")]
        public bool AssignTaskToUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] AssignTaskToUserRequest AssignTaskToUserRequest) {
            object[] results = this.Invoke("AssignTaskToUser", new object[] {
                        AssignTaskToUserRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignTaskToUserAsync(AssignTaskToUserRequest AssignTaskToUserRequest) {
            this.AssignTaskToUserAsync(AssignTaskToUserRequest, null);
        }
        
        /// <remarks/>
        public void AssignTaskToUserAsync(AssignTaskToUserRequest AssignTaskToUserRequest, object userState) {
            if ((this.AssignTaskToUserOperationCompleted == null)) {
                this.AssignTaskToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignTaskToUserOperationCompleted);
            }
            this.InvokeAsync("AssignTaskToUser", new object[] {
                        AssignTaskToUserRequest}, this.AssignTaskToUserOperationCompleted, userState);
        }
        
        private void OnAssignTaskToUserOperationCompleted(object arg) {
            if ((this.AssignTaskToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignTaskToUserCompleted(this, new AssignTaskToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetRunningProjectTimesResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("runningProjectTimes", IsNullable=false)]
        public RunningProjectTime[] GetRunningProjectTimes([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] object GetRunningProjectTimesRequest) {
            object[] results = this.Invoke("GetRunningProjectTimes", new object[] {
                        GetRunningProjectTimesRequest});
            return ((RunningProjectTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRunningProjectTimesAsync(object GetRunningProjectTimesRequest) {
            this.GetRunningProjectTimesAsync(GetRunningProjectTimesRequest, null);
        }
        
        /// <remarks/>
        public void GetRunningProjectTimesAsync(object GetRunningProjectTimesRequest, object userState) {
            if ((this.GetRunningProjectTimesOperationCompleted == null)) {
                this.GetRunningProjectTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRunningProjectTimesOperationCompleted);
            }
            this.InvokeAsync("GetRunningProjectTimes", new object[] {
                        GetRunningProjectTimesRequest}, this.GetRunningProjectTimesOperationCompleted, userState);
        }
        
        private void OnGetRunningProjectTimesOperationCompleted(object arg) {
            if ((this.GetRunningProjectTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRunningProjectTimesCompleted(this, new GetRunningProjectTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetGroupLeadersResponse", Namespace="http://timr.com/timrsync")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("leaders", IsNullable=false)]
        public User[] GetGroupLeaders([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string GetGroupLeadersRequest) {
            object[] results = this.Invoke("GetGroupLeaders", new object[] {
                        GetGroupLeadersRequest});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupLeadersAsync(string GetGroupLeadersRequest) {
            this.GetGroupLeadersAsync(GetGroupLeadersRequest, null);
        }
        
        /// <remarks/>
        public void GetGroupLeadersAsync(string GetGroupLeadersRequest, object userState) {
            if ((this.GetGroupLeadersOperationCompleted == null)) {
                this.GetGroupLeadersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupLeadersOperationCompleted);
            }
            this.InvokeAsync("GetGroupLeaders", new object[] {
                        GetGroupLeadersRequest}, this.GetGroupLeadersOperationCompleted, userState);
        }
        
        private void OnGetGroupLeadersOperationCompleted(object arg) {
            if ((this.GetGroupLeadersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupLeadersCompleted(this, new GetGroupLeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateWorkItemIdResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateWorkItemId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] UpdateWorkItemIdRequest UpdateWorkItemIdRequest) {
            object[] results = this.Invoke("UpdateWorkItemId", new object[] {
                        UpdateWorkItemIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkItemIdAsync(UpdateWorkItemIdRequest UpdateWorkItemIdRequest) {
            this.UpdateWorkItemIdAsync(UpdateWorkItemIdRequest, null);
        }
        
        /// <remarks/>
        public void UpdateWorkItemIdAsync(UpdateWorkItemIdRequest UpdateWorkItemIdRequest, object userState) {
            if ((this.UpdateWorkItemIdOperationCompleted == null)) {
                this.UpdateWorkItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkItemIdOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkItemId", new object[] {
                        UpdateWorkItemIdRequest}, this.UpdateWorkItemIdOperationCompleted, userState);
        }
        
        private void OnUpdateWorkItemIdOperationCompleted(object arg) {
            if ((this.UpdateWorkItemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkItemIdCompleted(this, new UpdateWorkItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateUserIdResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateUserId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] UpdateUserIdRequest UpdateUserIdRequest) {
            object[] results = this.Invoke("UpdateUserId", new object[] {
                        UpdateUserIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserIdAsync(UpdateUserIdRequest UpdateUserIdRequest) {
            this.UpdateUserIdAsync(UpdateUserIdRequest, null);
        }
        
        /// <remarks/>
        public void UpdateUserIdAsync(UpdateUserIdRequest UpdateUserIdRequest, object userState) {
            if ((this.UpdateUserIdOperationCompleted == null)) {
                this.UpdateUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserIdOperationCompleted);
            }
            this.InvokeAsync("UpdateUserId", new object[] {
                        UpdateUserIdRequest}, this.UpdateUserIdOperationCompleted, userState);
        }
        
        private void OnUpdateUserIdOperationCompleted(object arg) {
            if ((this.UpdateUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserIdCompleted(this, new UpdateUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SaveProjectTimeResponse", Namespace="http://timr.com/timrsync")]
        public long SaveProjectTime([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] ProjectTime SaveProjectTimeRequest) {
            object[] results = this.Invoke("SaveProjectTime", new object[] {
                        SaveProjectTimeRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProjectTimeAsync(ProjectTime SaveProjectTimeRequest) {
            this.SaveProjectTimeAsync(SaveProjectTimeRequest, null);
        }
        
        /// <remarks/>
        public void SaveProjectTimeAsync(ProjectTime SaveProjectTimeRequest, object userState) {
            if ((this.SaveProjectTimeOperationCompleted == null)) {
                this.SaveProjectTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProjectTimeOperationCompleted);
            }
            this.InvokeAsync("SaveProjectTime", new object[] {
                        SaveProjectTimeRequest}, this.SaveProjectTimeOperationCompleted, userState);
        }
        
        private void OnSaveProjectTimeOperationCompleted(object arg) {
            if ((this.SaveProjectTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProjectTimeCompleted(this, new SaveProjectTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateTaskResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] Task UpdateTaskRequest) {
            object[] results = this.Invoke("UpdateTask", new object[] {
                        UpdateTaskRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(Task UpdateTaskRequest) {
            this.UpdateTaskAsync(UpdateTaskRequest, null);
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(Task UpdateTaskRequest, object userState) {
            if ((this.UpdateTaskOperationCompleted == null)) {
                this.UpdateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskOperationCompleted);
            }
            this.InvokeAsync("UpdateTask", new object[] {
                        UpdateTaskRequest}, this.UpdateTaskOperationCompleted, userState);
        }
        
        private void OnUpdateTaskOperationCompleted(object arg) {
            if ((this.UpdateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskCompleted(this, new UpdateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteTaskResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteTask([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteTaskRequest) {
            object[] results = this.Invoke("DeleteTask", new object[] {
                        DeleteTaskRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(string DeleteTaskRequest) {
            this.DeleteTaskAsync(DeleteTaskRequest, null);
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(string DeleteTaskRequest, object userState) {
            if ((this.DeleteTaskOperationCompleted == null)) {
                this.DeleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteTask", new object[] {
                        DeleteTaskRequest}, this.DeleteTaskOperationCompleted, userState);
        }
        
        private void OnDeleteTaskOperationCompleted(object arg) {
            if ((this.DeleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RemoveTaskFromUserResponse", Namespace="http://timr.com/timrsync")]
        public bool RemoveTaskFromUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] RemoveTaskFromUserRequest RemoveTaskFromUserRequest) {
            object[] results = this.Invoke("RemoveTaskFromUser", new object[] {
                        RemoveTaskFromUserRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTaskFromUserAsync(RemoveTaskFromUserRequest RemoveTaskFromUserRequest) {
            this.RemoveTaskFromUserAsync(RemoveTaskFromUserRequest, null);
        }
        
        /// <remarks/>
        public void RemoveTaskFromUserAsync(RemoveTaskFromUserRequest RemoveTaskFromUserRequest, object userState) {
            if ((this.RemoveTaskFromUserOperationCompleted == null)) {
                this.RemoveTaskFromUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTaskFromUserOperationCompleted);
            }
            this.InvokeAsync("RemoveTaskFromUser", new object[] {
                        RemoveTaskFromUserRequest}, this.RemoveTaskFromUserOperationCompleted, userState);
        }
        
        private void OnRemoveTaskFromUserOperationCompleted(object arg) {
            if ((this.RemoveTaskFromUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTaskFromUserCompleted(this, new RemoveTaskFromUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RemoveLeaderFromGroupResponse", Namespace="http://timr.com/timrsync")]
        public bool RemoveLeaderFromGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] RemoveLeaderFromGroupRequest RemoveLeaderFromGroupRequest) {
            object[] results = this.Invoke("RemoveLeaderFromGroup", new object[] {
                        RemoveLeaderFromGroupRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLeaderFromGroupAsync(RemoveLeaderFromGroupRequest RemoveLeaderFromGroupRequest) {
            this.RemoveLeaderFromGroupAsync(RemoveLeaderFromGroupRequest, null);
        }
        
        /// <remarks/>
        public void RemoveLeaderFromGroupAsync(RemoveLeaderFromGroupRequest RemoveLeaderFromGroupRequest, object userState) {
            if ((this.RemoveLeaderFromGroupOperationCompleted == null)) {
                this.RemoveLeaderFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLeaderFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveLeaderFromGroup", new object[] {
                        RemoveLeaderFromGroupRequest}, this.RemoveLeaderFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveLeaderFromGroupOperationCompleted(object arg) {
            if ((this.RemoveLeaderFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLeaderFromGroupCompleted(this, new RemoveLeaderFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateTaskIdResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateTaskId([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] UpdateTaskIdRequest UpdateTaskIdRequest) {
            object[] results = this.Invoke("UpdateTaskId", new object[] {
                        UpdateTaskIdRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskIdAsync(UpdateTaskIdRequest UpdateTaskIdRequest) {
            this.UpdateTaskIdAsync(UpdateTaskIdRequest, null);
        }
        
        /// <remarks/>
        public void UpdateTaskIdAsync(UpdateTaskIdRequest UpdateTaskIdRequest, object userState) {
            if ((this.UpdateTaskIdOperationCompleted == null)) {
                this.UpdateTaskIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskIdOperationCompleted);
            }
            this.InvokeAsync("UpdateTaskId", new object[] {
                        UpdateTaskIdRequest}, this.UpdateTaskIdOperationCompleted, userState);
        }
        
        private void OnUpdateTaskIdOperationCompleted(object arg) {
            if ((this.UpdateTaskIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskIdCompleted(this, new UpdateTaskIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateWorkItemResponse", Namespace="http://timr.com/timrsync")]
        public bool UpdateWorkItem([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] WorkItem UpdateWorkItemRequest) {
            object[] results = this.Invoke("UpdateWorkItem", new object[] {
                        UpdateWorkItemRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkItemAsync(WorkItem UpdateWorkItemRequest) {
            this.UpdateWorkItemAsync(UpdateWorkItemRequest, null);
        }
        
        /// <remarks/>
        public void UpdateWorkItemAsync(WorkItem UpdateWorkItemRequest, object userState) {
            if ((this.UpdateWorkItemOperationCompleted == null)) {
                this.UpdateWorkItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkItemOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkItem", new object[] {
                        UpdateWorkItemRequest}, this.UpdateWorkItemOperationCompleted, userState);
        }
        
        private void OnUpdateWorkItemOperationCompleted(object arg) {
            if ((this.UpdateWorkItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkItemCompleted(this, new UpdateWorkItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("AssignCarToUserResponse", Namespace="http://timr.com/timrsync")]
        public bool AssignCarToUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] AssignCarToUserRequest AssignCarToUserRequest) {
            object[] results = this.Invoke("AssignCarToUser", new object[] {
                        AssignCarToUserRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignCarToUserAsync(AssignCarToUserRequest AssignCarToUserRequest) {
            this.AssignCarToUserAsync(AssignCarToUserRequest, null);
        }
        
        /// <remarks/>
        public void AssignCarToUserAsync(AssignCarToUserRequest AssignCarToUserRequest, object userState) {
            if ((this.AssignCarToUserOperationCompleted == null)) {
                this.AssignCarToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignCarToUserOperationCompleted);
            }
            this.InvokeAsync("AssignCarToUser", new object[] {
                        AssignCarToUserRequest}, this.AssignCarToUserOperationCompleted, userState);
        }
        
        private void OnAssignCarToUserOperationCompleted(object arg) {
            if ((this.AssignCarToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignCarToUserCompleted(this, new AssignCarToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteGroupResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteGroupRequest) {
            object[] results = this.Invoke("DeleteGroup", new object[] {
                        DeleteGroupRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(string DeleteGroupRequest) {
            this.DeleteGroupAsync(DeleteGroupRequest, null);
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(string DeleteGroupRequest, object userState) {
            if ((this.DeleteGroupOperationCompleted == null)) {
                this.DeleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteGroup", new object[] {
                        DeleteGroupRequest}, this.DeleteGroupOperationCompleted, userState);
        }
        
        private void OnDeleteGroupOperationCompleted(object arg) {
            if ((this.DeleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupCompleted(this, new DeleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("InviteUserResponse", Namespace="http://timr.com/timrsync")]
        public long InviteUser([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] User InviteUserRequest) {
            object[] results = this.Invoke("InviteUser", new object[] {
                        InviteUserRequest});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InviteUserAsync(User InviteUserRequest) {
            this.InviteUserAsync(InviteUserRequest, null);
        }
        
        /// <remarks/>
        public void InviteUserAsync(User InviteUserRequest, object userState) {
            if ((this.InviteUserOperationCompleted == null)) {
                this.InviteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInviteUserOperationCompleted);
            }
            this.InvokeAsync("InviteUser", new object[] {
                        InviteUserRequest}, this.InviteUserOperationCompleted, userState);
        }
        
        private void OnInviteUserOperationCompleted(object arg) {
            if ((this.InviteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InviteUserCompleted(this, new InviteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void LockProjectTimes([System.Xml.Serialization.XmlArrayAttribute(Namespace="http://timr.com/timrsync")] [System.Xml.Serialization.XmlArrayItemAttribute("ids", IsNullable=false)] long[] LockProjectTimesRequest) {
            this.Invoke("LockProjectTimes", new object[] {
                        LockProjectTimesRequest});
        }
        
        /// <remarks/>
        public void LockProjectTimesAsync(long[] LockProjectTimesRequest) {
            this.LockProjectTimesAsync(LockProjectTimesRequest, null);
        }
        
        /// <remarks/>
        public void LockProjectTimesAsync(long[] LockProjectTimesRequest, object userState) {
            if ((this.LockProjectTimesOperationCompleted == null)) {
                this.LockProjectTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockProjectTimesOperationCompleted);
            }
            this.InvokeAsync("LockProjectTimes", new object[] {
                        LockProjectTimesRequest}, this.LockProjectTimesOperationCompleted, userState);
        }
        
        private void OnLockProjectTimesOperationCompleted(object arg) {
            if ((this.LockProjectTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockProjectTimesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteCarByUUIDResponse", Namespace="http://timr.com/timrsync")]
        public bool DeleteCarByUUID([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string DeleteCarByUUIDRequest) {
            object[] results = this.Invoke("DeleteCarByUUID", new object[] {
                        DeleteCarByUUIDRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCarByUUIDAsync(string DeleteCarByUUIDRequest) {
            this.DeleteCarByUUIDAsync(DeleteCarByUUIDRequest, null);
        }
        
        /// <remarks/>
        public void DeleteCarByUUIDAsync(string DeleteCarByUUIDRequest, object userState) {
            if ((this.DeleteCarByUUIDOperationCompleted == null)) {
                this.DeleteCarByUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCarByUUIDOperationCompleted);
            }
            this.InvokeAsync("DeleteCarByUUID", new object[] {
                        DeleteCarByUUIDRequest}, this.DeleteCarByUUIDOperationCompleted, userState);
        }
        
        private void OnDeleteCarByUUIDOperationCompleted(object arg) {
            if ((this.DeleteCarByUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCarByUUIDCompleted(this, new DeleteCarByUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetGroupResponse", Namespace="http://timr.com/timrsync")]
        public Group GetGroup([System.Xml.Serialization.XmlElementAttribute(Namespace="http://timr.com/timrsync")] string GetGroupRequest) {
            object[] results = this.Invoke("GetGroup", new object[] {
                        GetGroupRequest});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAsync(string GetGroupRequest) {
            this.GetGroupAsync(GetGroupRequest, null);
        }
        
        /// <remarks/>
        public void GetGroupAsync(string GetGroupRequest, object userState) {
            if ((this.GetGroupOperationCompleted == null)) {
                this.GetGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupOperationCompleted);
            }
            this.InvokeAsync("GetGroup", new object[] {
                        GetGroupRequest}, this.GetGroupOperationCompleted, userState);
        }
        
        private void OnGetGroupOperationCompleted(object arg) {
            if ((this.GetGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupCompleted(this, new GetGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class Car {
        
        private string externalIdField;
        
        private string nameField;
        
        private string plateField;
        
        private string uuidField;
        
        /// <remarks/>
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string plate {
            get {
                return this.plateField;
            }
            set {
                this.plateField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class Group {
        
        private string externalIdField;
        
        private string parentExternalIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private Group[] subgroupsField;
        
        /// <remarks/>
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string parentExternalId {
            get {
                return this.parentExternalIdField;
            }
            set {
                this.parentExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subgroups")]
        public Group[] subgroups {
            get {
                return this.subgroupsField;
            }
            set {
                this.subgroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RunningDriveLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RunningProjectTime))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RunningWorkTime))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class RunningRecord {
        
        private long idField;
        
        private string externalUserIdField;
        
        private System.DateTime startTimeField;
        
        private string startTimeZoneField;
        
        private Position startPositionField;
        
        private bool changedField;
        
        private System.DateTime lastModifiedTimeField;
        
        private string lastModifiedTimeZoneField;
        
        private int breakTimeField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string startTimeZone {
            get {
                return this.startTimeZoneField;
            }
            set {
                this.startTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Position startPosition {
            get {
                return this.startPositionField;
            }
            set {
                this.startPositionField = value;
            }
        }
        
        /// <remarks/>
        public bool changed {
            get {
                return this.changedField;
            }
            set {
                this.changedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        public string lastModifiedTimeZone {
            get {
                return this.lastModifiedTimeZoneField;
            }
            set {
                this.lastModifiedTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        public int breakTime {
            get {
                return this.breakTimeField;
            }
            set {
                this.breakTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class Position {
        
        private long idField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class RunningDriveLog : RunningRecord {
        
        private string externalCarIdField;
        
        private long startMileageField;
        
        private string routeField;
        
        private string purposeField;
        
        private string visitedField;
        
        private bool businessField;
        
        private string uuidField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private string customField7Field;
        
        /// <remarks/>
        public string externalCarId {
            get {
                return this.externalCarIdField;
            }
            set {
                this.externalCarIdField = value;
            }
        }
        
        /// <remarks/>
        public long startMileage {
            get {
                return this.startMileageField;
            }
            set {
                this.startMileageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string visited {
            get {
                return this.visitedField;
            }
            set {
                this.visitedField = value;
            }
        }
        
        /// <remarks/>
        public bool business {
            get {
                return this.businessField;
            }
            set {
                this.businessField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField7 {
            get {
                return this.customField7Field;
            }
            set {
                this.customField7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class RunningProjectTime : RunningRecord {
        
        private string externalTaskIdField;
        
        private bool billableField;
        
        private string descriptionField;
        
        private string uuidField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private string customField7Field;
        
        /// <remarks/>
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        public bool billable {
            get {
                return this.billableField;
            }
            set {
                this.billableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField7 {
            get {
                return this.customField7Field;
            }
            set {
                this.customField7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class RunningWorkTime : RunningRecord {
        
        private string externalWorkItemIdField;
        
        private string descriptionField;
        
        private string uuidField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private string customField7Field;
        
        /// <remarks/>
        public string externalWorkItemId {
            get {
                return this.externalWorkItemIdField;
            }
            set {
                this.externalWorkItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField7 {
            get {
                return this.customField7Field;
            }
            set {
                this.customField7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class DriveLogsStatusRequestType {
        
        private long[] idsField;
        
        private DriveLogStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ids")]
        public long[] ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
            }
        }
        
        /// <remarks/>
        public DriveLogStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public enum DriveLogStatus {
        
        /// <remarks/>
        CHANGEABLE,
        
        /// <remarks/>
        LOCKED,
        
        /// <remarks/>
        CLEARED,
        
        /// <remarks/>
        CLOSED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class WorkTimesStatusRequestType {
        
        private long[] idsField;
        
        private WorkTimeStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ids")]
        public long[] ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
            }
        }
        
        /// <remarks/>
        public WorkTimeStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public enum WorkTimeStatus {
        
        /// <remarks/>
        CHANGEABLE,
        
        /// <remarks/>
        LOCKED,
        
        /// <remarks/>
        CLOSED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class ProjectTimesStatusRequestType {
        
        private long[] idsField;
        
        private ProjectTimeStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ids")]
        public long[] ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
            }
        }
        
        /// <remarks/>
        public ProjectTimeStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public enum ProjectTimeStatus {
        
        /// <remarks/>
        CHANGEABLE,
        
        /// <remarks/>
        LOCKED,
        
        /// <remarks/>
        CLEARED,
        
        /// <remarks/>
        CLOSED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class WorkItem {
        
        private string externalIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string uuidField;
        
        private string shortNameField;
        
        /// <remarks/>
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string shortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DriveLogQuery))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectTimeQuery))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkTimeQuery))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class RecordQuery {
        
        private string externalUserIdField;
        
        private System.Nullable<System.DateTime> startField;
        
        private bool startFieldSpecified;
        
        private System.Nullable<System.DateTime> endField;
        
        private bool endFieldSpecified;
        
        private System.Nullable<System.DateTime> lastModifiedField;
        
        private bool lastModifiedFieldSpecified;
        
        private System.Nullable<bool> closedField;
        
        private bool closedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified {
            get {
                return this.startFieldSpecified;
            }
            set {
                this.startFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> end {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endSpecified {
            get {
                return this.endFieldSpecified;
            }
            set {
                this.endFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedSpecified {
            get {
                return this.lastModifiedFieldSpecified;
            }
            set {
                this.lastModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closedSpecified {
            get {
                return this.closedFieldSpecified;
            }
            set {
                this.closedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class DriveLogQuery : RecordQuery {
        
        private string externalCarIdField;
        
        private string routeField;
        
        private string purposeField;
        
        private string visitedField;
        
        private System.Nullable<bool> businessField;
        
        private bool businessFieldSpecified;
        
        private DriveLogStatus[] statusesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalCarId {
            get {
                return this.externalCarIdField;
            }
            set {
                this.externalCarIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string visited {
            get {
                return this.visitedField;
            }
            set {
                this.visitedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> business {
            get {
                return this.businessField;
            }
            set {
                this.businessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool businessSpecified {
            get {
                return this.businessFieldSpecified;
            }
            set {
                this.businessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statuses")]
        public DriveLogStatus[] statuses {
            get {
                return this.statusesField;
            }
            set {
                this.statusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class ProjectTimeQuery : RecordQuery {
        
        private string externalTaskIdField;
        
        private string descriptionField;
        
        private System.Nullable<bool> billableField;
        
        private bool billableFieldSpecified;
        
        private ProjectTimeStatus[] statusesField;
        
        private System.Nullable<bool> includeChildTasksField;
        
        private bool includeChildTasksFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> billable {
            get {
                return this.billableField;
            }
            set {
                this.billableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billableSpecified {
            get {
                return this.billableFieldSpecified;
            }
            set {
                this.billableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statuses")]
        public ProjectTimeStatus[] statuses {
            get {
                return this.statusesField;
            }
            set {
                this.statusesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> includeChildTasks {
            get {
                return this.includeChildTasksField;
            }
            set {
                this.includeChildTasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includeChildTasksSpecified {
            get {
                return this.includeChildTasksFieldSpecified;
            }
            set {
                this.includeChildTasksFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class WorkTimeQuery : RecordQuery {
        
        private string externalWorkItemIdField;
        
        private string descriptionField;
        
        private WorkTimeStatus[] statusesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalWorkItemId {
            get {
                return this.externalWorkItemIdField;
            }
            set {
                this.externalWorkItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statuses")]
        public WorkTimeStatus[] statuses {
            get {
                return this.statusesField;
            }
            set {
                this.statusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class User {
        
        private string externalIdField;
        
        private string loginField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string emailField;
        
        private bool isAdminField;
        
        private System.Nullable<System.DateTime> resignDateField;
        
        private bool resignDateFieldSpecified;
        
        private System.Nullable<decimal> workingHoursField;
        
        private bool workingHoursFieldSpecified;
        
        private System.Nullable<bool> isTeamLeaderField;
        
        private string uuidField;
        
        private System.Nullable<System.DateTime> entryDateField;
        
        private bool entryDateFieldSpecified;
        
        private string ssoProviderField;
        
        private string ssoIdentifierField;
        
        public User() {
            this.isTeamLeaderField = false;
        }
        
        /// <remarks/>
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> resignDate {
            get {
                return this.resignDateField;
            }
            set {
                this.resignDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resignDateSpecified {
            get {
                return this.resignDateFieldSpecified;
            }
            set {
                this.resignDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> workingHours {
            get {
                return this.workingHoursField;
            }
            set {
                this.workingHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workingHoursSpecified {
            get {
                return this.workingHoursFieldSpecified;
            }
            set {
                this.workingHoursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public System.Nullable<bool> isTeamLeader {
            get {
                return this.isTeamLeaderField;
            }
            set {
                this.isTeamLeaderField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> entryDate {
            get {
                return this.entryDateField;
            }
            set {
                this.entryDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool entryDateSpecified {
            get {
                return this.entryDateFieldSpecified;
            }
            set {
                this.entryDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ssoProvider {
            get {
                return this.ssoProviderField;
            }
            set {
                this.ssoProviderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ssoIdentifier {
            get {
                return this.ssoIdentifierField;
            }
            set {
                this.ssoIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DriveLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectTime))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkTime))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class Record {
        
        private long idField;
        
        private string externalUserIdField;
        
        private System.DateTime startTimeField;
        
        private string startTimeZoneField;
        
        private System.DateTime endTimeField;
        
        private string endTimeZoneField;
        
        private long durationField;
        
        private Position startPositionField;
        
        private Position endPositionField;
        
        private bool closedField;
        
        private bool changedField;
        
        private System.DateTime lastModifiedTimeField;
        
        private string lastModifiedTimeZoneField;
        
        private int breakTimeField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string startTimeZone {
            get {
                return this.startTimeZoneField;
            }
            set {
                this.startTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string endTimeZone {
            get {
                return this.endTimeZoneField;
            }
            set {
                this.endTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        public long duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Position startPosition {
            get {
                return this.startPositionField;
            }
            set {
                this.startPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Position endPosition {
            get {
                return this.endPositionField;
            }
            set {
                this.endPositionField = value;
            }
        }
        
        /// <remarks/>
        public bool closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public bool changed {
            get {
                return this.changedField;
            }
            set {
                this.changedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        public string lastModifiedTimeZone {
            get {
                return this.lastModifiedTimeZoneField;
            }
            set {
                this.lastModifiedTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        public int breakTime {
            get {
                return this.breakTimeField;
            }
            set {
                this.breakTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class DriveLog : Record {
        
        private string externalCarIdField;
        
        private long startMileageField;
        
        private long endMileageField;
        
        private string routeField;
        
        private string purposeField;
        
        private string visitedField;
        
        private bool businessField;
        
        private System.Nullable<DriveLogStatus> statusField;
        
        private string uuidField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private string customField7Field;
        
        private string userUuidField;
        
        private string carUuidField;
        
        public DriveLog() {
            this.statusField = DriveLogStatus.CHANGEABLE;
        }
        
        /// <remarks/>
        public string externalCarId {
            get {
                return this.externalCarIdField;
            }
            set {
                this.externalCarIdField = value;
            }
        }
        
        /// <remarks/>
        public long startMileage {
            get {
                return this.startMileageField;
            }
            set {
                this.startMileageField = value;
            }
        }
        
        /// <remarks/>
        public long endMileage {
            get {
                return this.endMileageField;
            }
            set {
                this.endMileageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string visited {
            get {
                return this.visitedField;
            }
            set {
                this.visitedField = value;
            }
        }
        
        /// <remarks/>
        public bool business {
            get {
                return this.businessField;
            }
            set {
                this.businessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        [System.ComponentModel.DefaultValueAttribute(DriveLogStatus.CHANGEABLE)]
        public System.Nullable<DriveLogStatus> status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField7 {
            get {
                return this.customField7Field;
            }
            set {
                this.customField7Field = value;
            }
        }
        
        /// <remarks/>
        public string userUuid {
            get {
                return this.userUuidField;
            }
            set {
                this.userUuidField = value;
            }
        }
        
        /// <remarks/>
        public string carUuid {
            get {
                return this.carUuidField;
            }
            set {
                this.carUuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class ProjectTime : Record {
        
        private string externalTaskIdField;
        
        private string taskBreadCrumbsField;
        
        private string descriptionField;
        
        private bool billableField;
        
        private System.Nullable<ProjectTimeStatus> statusField;
        
        private string uuidField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private string customField7Field;
        
        private string userUuidField;
        
        private string taskUuidField;
        
        private System.Nullable<decimal> hourlyRateField;
        
        private bool hourlyRateFieldSpecified;
        
        private System.Nullable<decimal> hourlyRateInternalField;
        
        private bool hourlyRateInternalFieldSpecified;
        
        public ProjectTime() {
            this.statusField = ProjectTimeStatus.CHANGEABLE;
        }
        
        /// <remarks/>
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        public string taskBreadCrumbs {
            get {
                return this.taskBreadCrumbsField;
            }
            set {
                this.taskBreadCrumbsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool billable {
            get {
                return this.billableField;
            }
            set {
                this.billableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        [System.ComponentModel.DefaultValueAttribute(ProjectTimeStatus.CHANGEABLE)]
        public System.Nullable<ProjectTimeStatus> status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField7 {
            get {
                return this.customField7Field;
            }
            set {
                this.customField7Field = value;
            }
        }
        
        /// <remarks/>
        public string userUuid {
            get {
                return this.userUuidField;
            }
            set {
                this.userUuidField = value;
            }
        }
        
        /// <remarks/>
        public string taskUuid {
            get {
                return this.taskUuidField;
            }
            set {
                this.taskUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> hourlyRate {
            get {
                return this.hourlyRateField;
            }
            set {
                this.hourlyRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hourlyRateSpecified {
            get {
                return this.hourlyRateFieldSpecified;
            }
            set {
                this.hourlyRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> hourlyRateInternal {
            get {
                return this.hourlyRateInternalField;
            }
            set {
                this.hourlyRateInternalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hourlyRateInternalSpecified {
            get {
                return this.hourlyRateInternalFieldSpecified;
            }
            set {
                this.hourlyRateInternalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class WorkTime : Record {
        
        private string externalWorkItemIdField;
        
        private string descriptionField;
        
        private System.Nullable<WorkTimeStatus> statusField;
        
        private string uuidField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private string customField7Field;
        
        private string userUuidField;
        
        private string workItemUuidField;
        
        public WorkTime() {
            this.statusField = WorkTimeStatus.CHANGEABLE;
        }
        
        /// <remarks/>
        public string externalWorkItemId {
            get {
                return this.externalWorkItemIdField;
            }
            set {
                this.externalWorkItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        [System.ComponentModel.DefaultValueAttribute(WorkTimeStatus.CHANGEABLE)]
        public System.Nullable<WorkTimeStatus> status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField7 {
            get {
                return this.customField7Field;
            }
            set {
                this.customField7Field = value;
            }
        }
        
        /// <remarks/>
        public string userUuid {
            get {
                return this.userUuidField;
            }
            set {
                this.userUuidField = value;
            }
        }
        
        /// <remarks/>
        public string workItemUuid {
            get {
                return this.workItemUuidField;
            }
            set {
                this.workItemUuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public partial class Task {
        
        private string externalIdField;
        
        private string parentExternalIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> startField;
        
        private bool startFieldSpecified;
        
        private System.Nullable<System.DateTime> endField;
        
        private bool endFieldSpecified;
        
        private bool bookableField;
        
        private bool billableField;
        
        private Task[] subtasksField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string uuidField;
        
        private System.Nullable<BudgetPlanningType> budgetPlanningTypeField;
        
        private bool budgetPlanningTypeFieldSpecified;
        
        private System.Nullable<bool> budgetPlanningTypeInheritedField;
        
        private bool budgetPlanningTypeInheritedFieldSpecified;
        
        private System.Nullable<decimal> hoursPlannedField;
        
        private bool hoursPlannedFieldSpecified;
        
        private System.Nullable<decimal> hourlyRateField;
        
        private bool hourlyRateFieldSpecified;
        
        private System.Nullable<decimal> budgetPlannedField;
        
        private bool budgetPlannedFieldSpecified;
        
        private string externalCommentsField;
        
        private System.Nullable<System.DateTime> lockDateField;
        
        private bool lockDateFieldSpecified;
        
        private string parentUuidField;
        
        private bool descriptionRequiredField;
        
        private string addressField;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private string countryField;
        
        private System.Nullable<double> latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private System.Nullable<double> longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private System.Nullable<int> locationRestrictionRadiusField;
        
        private bool locationRestrictionRadiusFieldSpecified;
        
        public Task() {
            this.descriptionRequiredField = false;
        }
        
        /// <remarks/>
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string parentExternalId {
            get {
                return this.parentExternalIdField;
            }
            set {
                this.parentExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified {
            get {
                return this.startFieldSpecified;
            }
            set {
                this.startFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> end {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endSpecified {
            get {
                return this.endFieldSpecified;
            }
            set {
                this.endFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool bookable {
            get {
                return this.bookableField;
            }
            set {
                this.bookableField = value;
            }
        }
        
        /// <remarks/>
        public bool billable {
            get {
                return this.billableField;
            }
            set {
                this.billableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subtasks")]
        public Task[] subtasks {
            get {
                return this.subtasksField;
            }
            set {
                this.subtasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<BudgetPlanningType> budgetPlanningType {
            get {
                return this.budgetPlanningTypeField;
            }
            set {
                this.budgetPlanningTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetPlanningTypeSpecified {
            get {
                return this.budgetPlanningTypeFieldSpecified;
            }
            set {
                this.budgetPlanningTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> budgetPlanningTypeInherited {
            get {
                return this.budgetPlanningTypeInheritedField;
            }
            set {
                this.budgetPlanningTypeInheritedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetPlanningTypeInheritedSpecified {
            get {
                return this.budgetPlanningTypeInheritedFieldSpecified;
            }
            set {
                this.budgetPlanningTypeInheritedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> hoursPlanned {
            get {
                return this.hoursPlannedField;
            }
            set {
                this.hoursPlannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hoursPlannedSpecified {
            get {
                return this.hoursPlannedFieldSpecified;
            }
            set {
                this.hoursPlannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> hourlyRate {
            get {
                return this.hourlyRateField;
            }
            set {
                this.hourlyRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hourlyRateSpecified {
            get {
                return this.hourlyRateFieldSpecified;
            }
            set {
                this.hourlyRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> budgetPlanned {
            get {
                return this.budgetPlannedField;
            }
            set {
                this.budgetPlannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetPlannedSpecified {
            get {
                return this.budgetPlannedFieldSpecified;
            }
            set {
                this.budgetPlannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalComments {
            get {
                return this.externalCommentsField;
            }
            set {
                this.externalCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> lockDate {
            get {
                return this.lockDateField;
            }
            set {
                this.lockDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lockDateSpecified {
            get {
                return this.lockDateFieldSpecified;
            }
            set {
                this.lockDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string parentUuid {
            get {
                return this.parentUuidField;
            }
            set {
                this.parentUuidField = value;
            }
        }
        
        /// <remarks/>
        public bool descriptionRequired {
            get {
                return this.descriptionRequiredField;
            }
            set {
                this.descriptionRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> locationRestrictionRadius {
            get {
                return this.locationRestrictionRadiusField;
            }
            set {
                this.locationRestrictionRadiusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool locationRestrictionRadiusSpecified {
            get {
                return this.locationRestrictionRadiusFieldSpecified;
            }
            set {
                this.locationRestrictionRadiusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://timr.com/timrsync")]
    public enum BudgetPlanningType {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        TASK_HOURLY_RATE,
        
        /// <remarks/>
        USER_HOURLY_RATE,
        
        /// <remarks/>
        FIXED_PRICE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class GetTasksRequest {
        
        private string nameField;
        
        private System.Nullable<bool> activeField;
        
        private bool activeFieldSpecified;
        
        private System.Nullable<bool> billableField;
        
        private bool billableFieldSpecified;
        
        private System.Nullable<bool> bookableField;
        
        private bool bookableFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> billable {
            get {
                return this.billableField;
            }
            set {
                this.billableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billableSpecified {
            get {
                return this.billableFieldSpecified;
            }
            set {
                this.billableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> bookable {
            get {
                return this.bookableField;
            }
            set {
                this.bookableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bookableSpecified {
            get {
                return this.bookableFieldSpecified;
            }
            set {
                this.bookableFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class RemoveUserFromGroupRequest {
        
        private string externalUserIdField;
        
        private string externalGroupIdField;
        
        private string uuidUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalGroupId {
            get {
                return this.externalGroupIdField;
            }
            set {
                this.externalGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class AssignLeaderToGroupRequest {
        
        private string externalUserIdField;
        
        private string externalGroupIdField;
        
        private string uuidUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalGroupId {
            get {
                return this.externalGroupIdField;
            }
            set {
                this.externalGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class RemoveGroupFromTaskRequest {
        
        private string externalGroupIdField;
        
        private string externalTaskIdField;
        
        private string uuidTaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalGroupId {
            get {
                return this.externalGroupIdField;
            }
            set {
                this.externalGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidTask {
            get {
                return this.uuidTaskField;
            }
            set {
                this.uuidTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class UpdateCarIdRequest {
        
        private Car carField;
        
        private string newExternalCarIdField;
        
        /// <remarks/>
        public Car car {
            get {
                return this.carField;
            }
            set {
                this.carField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalCarId {
            get {
                return this.newExternalCarIdField;
            }
            set {
                this.newExternalCarIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class UpdateGroupIdRequest {
        
        private Group groupField;
        
        private string newExternalGroupIdField;
        
        /// <remarks/>
        public Group group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalGroupId {
            get {
                return this.newExternalGroupIdField;
            }
            set {
                this.newExternalGroupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class AssignGroupToTaskRequest {
        
        private string externalGroupIdField;
        
        private string externalTaskIdField;
        
        private string uuidTaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalGroupId {
            get {
                return this.externalGroupIdField;
            }
            set {
                this.externalGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidTask {
            get {
                return this.uuidTaskField;
            }
            set {
                this.uuidTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class SetGroupExternalIdRequest {
        
        private string nameField;
        
        private string parentExternalIdField;
        
        private string newExternalGroupIdField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string parentExternalId {
            get {
                return this.parentExternalIdField;
            }
            set {
                this.parentExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalGroupId {
            get {
                return this.newExternalGroupIdField;
            }
            set {
                this.newExternalGroupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class GetGroupsRequest {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class SetTaskExternalIdRequest {
        
        private string nameField;
        
        private string parentExternalIdField;
        
        private string newExternalTaskIdField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string parentExternalId {
            get {
                return this.parentExternalIdField;
            }
            set {
                this.parentExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalTaskId {
            get {
                return this.newExternalTaskIdField;
            }
            set {
                this.newExternalTaskIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class AssignUserToGroupRequest {
        
        private string externalUserIdField;
        
        private string externalGroupIdField;
        
        private string uuidUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalGroupId {
            get {
                return this.externalGroupIdField;
            }
            set {
                this.externalGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class RemoveCarFromUserRequest {
        
        private string externalUserIdField;
        
        private string externalCarIdField;
        
        private string uuidUserField;
        
        private string uuidCarField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalCarId {
            get {
                return this.externalCarIdField;
            }
            set {
                this.externalCarIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidCar {
            get {
                return this.uuidCarField;
            }
            set {
                this.uuidCarField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class AssignTaskToUserRequest {
        
        private string externalUserIdField;
        
        private string externalTaskIdField;
        
        private string uuidUserField;
        
        private string uuidTaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidTask {
            get {
                return this.uuidTaskField;
            }
            set {
                this.uuidTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class UpdateWorkItemIdRequest {
        
        private WorkItem workItemField;
        
        private string newExternalWorkItemIdField;
        
        /// <remarks/>
        public WorkItem workItem {
            get {
                return this.workItemField;
            }
            set {
                this.workItemField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalWorkItemId {
            get {
                return this.newExternalWorkItemIdField;
            }
            set {
                this.newExternalWorkItemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class UpdateUserIdRequest {
        
        private User userField;
        
        private string newExternalUserIdField;
        
        /// <remarks/>
        public User user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalUserId {
            get {
                return this.newExternalUserIdField;
            }
            set {
                this.newExternalUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class RemoveTaskFromUserRequest {
        
        private string externalUserIdField;
        
        private string externalTaskIdField;
        
        private string uuidUserField;
        
        private string uuidTaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalTaskId {
            get {
                return this.externalTaskIdField;
            }
            set {
                this.externalTaskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidTask {
            get {
                return this.uuidTaskField;
            }
            set {
                this.uuidTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class RemoveLeaderFromGroupRequest {
        
        private string externalUserIdField;
        
        private string externalGroupIdField;
        
        private string uuidUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalGroupId {
            get {
                return this.externalGroupIdField;
            }
            set {
                this.externalGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class UpdateTaskIdRequest {
        
        private Task taskField;
        
        private string newExternalTaskIdField;
        
        /// <remarks/>
        public Task task {
            get {
                return this.taskField;
            }
            set {
                this.taskField = value;
            }
        }
        
        /// <remarks/>
        public string newExternalTaskId {
            get {
                return this.newExternalTaskIdField;
            }
            set {
                this.newExternalTaskIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://timr.com/timrsync")]
    public partial class AssignCarToUserRequest {
        
        private string externalUserIdField;
        
        private string externalCarIdField;
        
        private string uuidUserField;
        
        private string uuidCarField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalCarId {
            get {
                return this.externalCarIdField;
            }
            set {
                this.externalCarIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidUser {
            get {
                return this.uuidUserField;
            }
            set {
                this.uuidUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string uuidCar {
            get {
                return this.uuidCarField;
            }
            set {
                this.uuidCarField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCarCompletedEventHandler(object sender, DeleteCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCarCompletedEventHandler(object sender, UpdateCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTasksCompletedEventHandler(object sender, GetTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveWorkTimeCompletedEventHandler(object sender, SaveWorkTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWorkTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWorkTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCarCompletedEventHandler(object sender, AddCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRunningDriveLogsCompletedEventHandler(object sender, GetRunningDriveLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRunningDriveLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRunningDriveLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RunningDriveLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RunningDriveLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, RemoveUserFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetWorkTimesCompletedEventHandler(object sender, GetWorkTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignLeaderToGroupCompletedEventHandler(object sender, AssignLeaderToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignLeaderToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignLeaderToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveGroupFromTaskCompletedEventHandler(object sender, RemoveGroupFromTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveGroupFromTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveGroupFromTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRunningWorkTimesCompletedEventHandler(object sender, GetRunningWorkTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRunningWorkTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRunningWorkTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RunningWorkTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RunningWorkTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteWorkItemCompletedEventHandler(object sender, DeleteWorkItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCarIdCompletedEventHandler(object sender, UpdateCarIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTaskCompletedEventHandler(object sender, AddTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveDriveLogCompletedEventHandler(object sender, SaveDriveLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDriveLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDriveLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateGroupIdCompletedEventHandler(object sender, UpdateGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetWorkItemsCompletedEventHandler(object sender, GetWorkItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupUsersCompletedEventHandler(object sender, GetGroupUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignGroupToTaskCompletedEventHandler(object sender, AssignGroupToTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignGroupToTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignGroupToTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetGroupExternalIdCompletedEventHandler(object sender, SetGroupExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGroupExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGroupExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetDriveLogsStatusCompletedEventHandler(object sender, SetDriveLogsStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDriveLogsStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDriveLogsStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UnlockProjectTimesCompletedEventHandler(object sender, UnlockProjectTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockProjectTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockProjectTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTaskCompletedEventHandler(object sender, GetTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetProjectTimesCompletedEventHandler(object sender, GetProjectTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTaskByUUIDCompletedEventHandler(object sender, DeleteTaskByUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskByUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskByUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateGroupCompletedEventHandler(object sender, UpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteUserByUUIDCompletedEventHandler(object sender, DeleteUserByUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserByUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserByUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDriveLogsCompletedEventHandler(object sender, GetDriveLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriveLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriveLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriveLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriveLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCarsCompletedEventHandler(object sender, GetCarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Car[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Car[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetProjectTimesStatusCompletedEventHandler(object sender, SetProjectTimesStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetProjectTimesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetProjectTimesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupsCompletedEventHandler(object sender, GetGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetTaskExternalIdCompletedEventHandler(object sender, SetTaskExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTaskExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTaskExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteWorkItemByUUIDCompletedEventHandler(object sender, DeleteWorkItemByUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkItemByUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkItemByUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetWorkTimesStatusCompletedEventHandler(object sender, SetWorkTimesStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetWorkTimesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetWorkTimesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTaskByUUIDCompletedEventHandler(object sender, GetTaskByUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskByUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskByUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignUserToGroupCompletedEventHandler(object sender, AssignUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddWorkItemCompletedEventHandler(object sender, AddWorkItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWorkItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWorkItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveCarFromUserCompletedEventHandler(object sender, RemoveCarFromUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCarFromUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCarFromUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignTaskToUserCompletedEventHandler(object sender, AssignTaskToUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignTaskToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignTaskToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRunningProjectTimesCompletedEventHandler(object sender, GetRunningProjectTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRunningProjectTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRunningProjectTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RunningProjectTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RunningProjectTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupLeadersCompletedEventHandler(object sender, GetGroupLeadersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupLeadersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupLeadersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateWorkItemIdCompletedEventHandler(object sender, UpdateWorkItemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateUserIdCompletedEventHandler(object sender, UpdateUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveProjectTimeCompletedEventHandler(object sender, SaveProjectTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProjectTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProjectTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateTaskCompletedEventHandler(object sender, UpdateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTaskCompletedEventHandler(object sender, DeleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveTaskFromUserCompletedEventHandler(object sender, RemoveTaskFromUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTaskFromUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTaskFromUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveLeaderFromGroupCompletedEventHandler(object sender, RemoveLeaderFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLeaderFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLeaderFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateTaskIdCompletedEventHandler(object sender, UpdateTaskIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateWorkItemCompletedEventHandler(object sender, UpdateWorkItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignCarToUserCompletedEventHandler(object sender, AssignCarToUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignCarToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignCarToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGroupCompletedEventHandler(object sender, DeleteGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InviteUserCompletedEventHandler(object sender, InviteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InviteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InviteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LockProjectTimesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCarByUUIDCompletedEventHandler(object sender, DeleteCarByUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCarByUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCarByUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupCompletedEventHandler(object sender, GetGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591